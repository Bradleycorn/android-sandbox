<?xml version="1.0" encoding="utf-8"?>
<manifest package="net.bradball.android.sandbox"
          xmlns:android="http://schemas.android.com/apk/res/android"
          xmlns:tools="http://schemas.android.com/tools"
    >

    <!-- APP PERMISSIONS -->


    <!-- needed to download data from archive.org -->
    <uses-permission android:name="android.permission.INTERNET"/>

    <!-- need to get current settings of our sync adapter -->
    <uses-permission android:name="android.permission.READ_SYNC_SETTINGS"/>

    <!-- needed to enable our sync adapter -->
    <uses-permission android:name="android.permission.WRITE_SYNC_SETTINGS"/>

    <!-- needed to create our stub account for the sync adapter -->
    <uses-permission android:name="android.permission.AUTHENTICATE_ACCOUNTS"/>

    <!-- not sure that this is required. might be if we want to use a SyncStatusObserver to report on sync status -->
    <uses-permission android:name="android.permission.READ_SYNC_STATS"/>

    <!-- APPLICATION DEFINITION -->
    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/AppTheme"
        >

        <!-- ACTIVITIES -->


        <!-- the main activity that serves as the application's entry point -->
        <activity android:name=".MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>

                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>

        <!-- CONTENT PROVIDERS -->


        <!-- defines our primary content provider, used for storage/reading of data sync'd from archive.org -->
        <!-- note that we don't make the provider syncable here. That happens when the stub account is created on app launch -->
        <provider
            android:name=".provider.RecordingsProvider"
            android:authorities="net.bradball.android.sandbox"
            android:exported="false"
            android:label="@string/app_name"
            android:readPermission="net.bradball.android.sandbox.permission.READ_RECORDINGS"
            />

        <!-- SERVICES -->


        <!-- a stub authenticator service, required to facilitate our sync adapter -->
        <service android:name=".service.StubAuthenticatorService">
            <intent-filter>
                <action android:name="android.accounts.AccountAuthenticator"/>
            </intent-filter>

            <meta-data
                android:name="android.accounts.AccountAuthenticator"
                android:resource="@xml/authenticator"
                />
        </service>

        <!-- a sync adapter service responsible for starting up our sync adapter -->
        <service
            android:name=".service.ArchiveOrgSyncService"
            android:enabled="true"
            android:exported="true"
            >
            <intent-filter>
                <action android:name="android.content.SyncAdapter"/>
            </intent-filter>

            <meta-data
                android:name="android.content.SyncAdapter"
                android:resource="@xml/syncadapter"
                />
        </service>



        <!-- A receiver that will receive media buttons and send as intents to our MusicService implementation.
            Required on pre-Lollipop. More information at:
            http://developer.android.com/reference/android/support/v4/media/session/MediaButtonReceiver.html -->
        <receiver android:name="android.support.v4.media.session.MediaButtonReceiver" >
            <intent-filter>
                <action android:name="android.intent.action.MEDIA_BUTTON" />
            </intent-filter>
        </receiver>
        <service
            android:name=".service.MusicService"
            android:exported="true"
            tools:ignore="ExportedService"
            >
        </service>
    </application>

</manifest>